name: Publish to PyPI and Change Management

on:
  workflow_run:
    workflows: ["Create Github Tag and Release"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  check_for_moratorium:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: change_management
    steps:
      - uses: actions/checkout@v4
      - env:
          TPS_API_TOKEN: ${{ secrets.TPS_API_TOKEN_PARAM }}
        run: ./scripts/release/tps-check-lock heroku-applink-python ${{ github.sha }}

  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: check_for_moratorium
    runs-on: ubuntu-latest
    environment: change_management
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for Trusted Publishing
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Using tag: $TAG"

      - name: Checkout the tagged version
        run: |
          git checkout ${{ steps.get_tag.outputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          cache-dependency-glob: pyproject.toml

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build package
        run: uv build

      - name: Release to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Publish To Change Management
        env:
          ACTOR_EMAIL: ${{ secrets.TPS_API_RELEASE_ACTOR_EMAIL }}
          TPS_API_TOKEN: ${{ secrets.TPS_API_TOKEN_PARAM }}
        # Failure to record the release should not fail the workflow for now.
        continue-on-error: true
        run: ./scripts/release/tps-record-release heroku-applink-python ${{ github.sha }}
